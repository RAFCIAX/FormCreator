{"version":3,"sources":["Enums/FieldType.ts","Classes/FieldLabel.ts","Classes/TextAreaField.ts","Classes/SelectField.ts","Classes/EmailField.ts","Classes/DateField.ts","Classes/CheckboxField.ts","Classes/InputField.ts","Classes/LocStorage.ts","Classes/Router.ts","Classes/Form.ts","Classes/Deserializer.ts","Classes/App.ts","index.ts"],"names":[],"mappings":";;;;;;AAAA,IAAY,SAAZ;AYAA,ANCA,ADAA,AMAA,APAA,AHDA,ASCA,AHDA,AEAA,ANCA,ADAA,AWDA,IDAA,ANCA,ADAA,AMAA,APAA,AHDA,ASCA,AHDA,AEAA,ANCA,ADAA,AWDA,KAAA,CJAA,EIAA,EZAA,CKCA,ADAA,ADAA,ADAA,ADAA,CQAA,AHDA,EDCA,ADAA,ADAA,ADAA,ADAA,CUDA,ADCA,ADAA,AHDA,AMAA,CAAA,EDAA,ADCA,GLAA,ADAA,ADAA,ADAA,ADAA,CIAA,ADAA,ADAA,AMAA,AHDA,AJCA,ADAA,CQAA,AHDA,EKAA,ADCA,CCDA,ADCA,KEDA,CAAA,KHCA,AHDA,CGCA,AHDA,KKAA,ADCA,CCDA,ANCA,ADAA,AMAA,APAA,ADAA,ADAA,CIAA,ADAA,ADAA,ADAA,ADAA;ADDA,AQAA,ATAA,CAAA,UAAY,SAAZ,EAAqB;AYCrB,ANCA,ADAA,AMAA,APAA,AHFA,ASEA,AHAA,AEFA,ANEA,ADAA,AFDI,AaCS,EbDT,EYAJ,ANCA,ADAA,AMAA,APAA,AMAA,AHAA,AJAA,ADAA,GWAa,CAAA,GbDT,AaCS,CZFb,ASEA,ADFA,ATCI,EaCe,CFAnB,ADAA,AHAA,CDAA,ADAA,ADAA,ADAA,ADAA,CUDA,CDCA,AJAA,AMAuB,CPAvB,ADAA,ADAA,ADAA,ADAA,CUDA,CZAI,CUCJ,AVDI,CUCJ,AGAuB,CAAA,CFAvB,AJAA,APDI,CMCJ,ADAA,AMAA,APAA,AGAA,AJAA,ADAA,CUDA,ANCA,ADAA,ADAA,ADAA,ADAA,AWAmB,CDDnB,CCCa,EbDT,EUCJ,CAAA,KCAA,CAAA,CLAA,ADAA,ADAA,ADAA,ADAA,CIAA,ADAA,ADAA,ADAA,ADAA,CUDA,CAAA,ILCA,CAAA;ANDI,AQAA,ATCA,AaCJ,EbDI,KaCG,CAAC,GZFJ,AQAA,ATCA,AaCJ,CbDI,AaCQ,KJFR,GAAA,CRAA,AQEC,CRFY,IDCb,CAAA,GAAA,CCDA,AYEJ,EZFyC,ODCrC,CCDA,EAAuD,OAAvD,EAAsE;AWC1E,ANEA,ADAA,AMDA,APCA,AHFQ,ASGR,AHDA,AJAA,ADAA,AFDI,AaCJ,EbDI,EYDJ,ANEA,ADAA,AMDA,APCA,AMCA,AHDA,AJAA,ADAA,GWAA,CZFc,ASGd,AGDA,GbDI,AaCJ,CbDI,AaCA,CRAJ,CDAA,AGAA,CNFqB,AEErB,CSFA,ADCA,CLCA,AJAA,CDFwB,ADCpB,CYDJ,ADCA,AXAI,GAAA,IYDJ,ADCA,AVDgC,AYEhC,CDFA,ADCA,AVDiC,AYEd,CbDf,MaCe,CAAA,GAAA,CAAI,CZFC,CWAxB,ADCA,AVD+C,CWA/C,ADCA,KECA,CZFwB,CAAhB;AKER,ADAA,ADAA,AHDQ,ASER,AHDA,AECW,ANDX,ADAA,AFAI,ESCO,ATDP,ECDI,IQEG,CAAA,ERFI,ADCX,CCDY,ADCZ,KSCO,ETDP,CSCA,ATDA,CCDI,EDCJ,CCDwB,MDCxB,ECDI,AQEJ;AGFJ,ANCA,ADAA,AMAA,APAA,AHAQ,ASCR,AHDA,AEEQ,ANFR,ADAA,AFCI,EAAA,EYFJ,ADCA,AVAQ,IQEM,GRFC,ADCX,CMDJ,ADAA,ADAA,AHAgB,ASChB,AHDA,AJAA,ADAA,AFCI,CSCe,EGHnB,CHG8B,CEF9B,CCDA,EDCA,CVAQ,CQE4B,CAAC,ATDjC,CCDwB,ADCxB,CYFJ,CAAA,CDCA,AXCI,CWDJ,GVAQ,AQEsB,CAAgB,ETD1C,ISC0B,CGH9B,AHGqD,CGHrD,GDCA,CAAA,CFE8B,CAA8B,CAA9B,CAAtB;AHDJ,ADAA,ADAA,AHAI,ASCJ,AHDA,AEEI,ANDJ,ADDA,AFCA,EAAA,ECDI,IQEM,GHFV,ADAA,ADAA,AMCA,AHDA,AJCA,ADDA,AFCA,CAAA,CCDa,CAAC,CSCd,CAAY,CDCO,GJFnB,AIEsB,CJFV,ADAZ,AGAA,CHAY,AMCZ,AHDY,AJCZ,AHAA,CGAY,AHAZ,CMDA,AIC4B,ADCF,APF1B,CIAY,ADAZ,AJAI,ACAQ,CEAZ,AHA0B,AMA1B,APCA,CKD0B,AFC1B,CCD0B,AGAA,CDA1B,AHC0B,ADD1B,EIA0B,AJAA,CGA1B,CDAA,AHAI,AMAJ,CFAyC,AFCzC,CCDyC,AGAA,CDAzC,AHCyC,ADDzC,AFCA,EMDyC,AJAA,CGAzC,AIEsB,CLFtB,AGAA,AEE0C,CJFmB,CDAF,AGAL,CDAtD,AHCA,ADDA,EIAuD,AGEjC,ANDsC,ADDN,COElD,INDJ,EAAgF;ASFpF,ANSI,ADAA,AMRJ,APQI,AHPC,ASCG,AHMJ,AELI,ANQJ,ADHA,AFNH,CAPD,EAAY,CYIZ,ADCA,AFGQ,KHKJ,ADAA,ADAA,AMNS,AHMT,AJGA,ADHA,EOLW,CAAC,ATRK,CMajB,ADAA,ADAA,AGAA,AJGA,ADHA,EOLI,ATRI,CMaU,ADAA,ADAA,AGAA,AELF,ANQE,ADHA,GUTtB,ADCA,CDEQ,EEHR,ADCA,AXLY,CUOe,AVPf,IMaU,ADAA,ADAA,AGAA,AJGA,ADHA,CIAA,ADAA,ADAA,AGAA,AJGA,ADHA,CUTtB,ADCA,ADEQ,CEHR,ADCA,EXLY,GSQJ,EHKc,ADAA,ADAA,AGAA,AJGA,ADHA,AFbV,CMaoB,ADAA,ADAA,AGAA,AJGA,ADHA,IGA5B,CDAA,CJbQ,COaR,APbQ,CMaR,CMTJ,ADCA,ARWI,CSZJ,ADCA,ETQI,IFbQ,GAAS,EAAT,CAAZ;AMMQ,ADAA,ADAA,AMEH,AHFG,AEGA,ANFA,ADDA,QOGM,CHHD,ADAA,ADAA,AGAA,AJCA,ADDA,COGG,GHHR,ADAA,ADAA,AGAA,AEGW,ANFX,ADDA,GIAY,ADAA,ADAA,AGAA,AJCA,ADDA,IIAZ,ADAA,ADAA,AGAA,AJCA,ADDA,EOGoB,CAAC,GAAV,CAAc,IAAd,CAAX;AGJR,ANEQ,ADAA,AMDR,APCQ,AHDH,AMCG,AEGA,ANFA,ADDA,IUFR,ADCA,KLCa,ADAA,ADAA,AGAA,AJCA,ADDA,EOGE,EAAP,CHHA,ADAA,ADAA,AGAA,AJCA,ADDA,EUFR,ADCA,CLCqB,ADAA,ADAA,AGAA,AJCA,ADDA,EUFrB,ADCA,GLCQ,ADAA,ADAA,AGAA,AJCA,ADDA,IUFR,ADCA,CCDA,ADCA,cCDA,ADCA,CCDA,ADCA;ALEQ,ADAA,ADAA,AHAR,ASII,AHJI,AEGH,ANFG,ADDA,EQIJ,CDPO,GCOP,CAAA,EJJS,ADAA,ADAA,AHAb,AMAa,AJCA,ADDA,KIAL,ADAA,ADAA,AGAA,ALAA,EQIJ,APHI,CGDa,ADAA,ADAA,AMIjB,AHJiB,ALAA,EDArB,AECuB,GGDf,ADAA,ADAA,AGAA,ALAA,CQIJ,GAAA,APHI,UOGG,IAAP,EAAwB;AEN5B,ANGK,ADAA,AMDL,APCK,AHTL,ASYI,AHHC,AJCG,ADDH,CDTL,EAAA,CWMA,ADEA,IDII,CPFS,CSJb,GAAA,AFMI,CPFI,EQFR,ADII,CPFiB,GSJrB,AFMI,CENJ,CTIQ,OSJR,CAAA;ADEA,AFIA,ANDK,SMCL,MAAA;AGJA,ANSI,ADAA,AMTJ,APSI,AHjBS,ASaL,AHIJ,AEjBJ,APiBI,COjBJ,CHiBI,ADAA,ADAA,AGAA,ALAA,COjBJ,CGQA,GXRa,CAAA,ASaC,GLIV,CAAA,AMTJ,APSI,AGAA,CHAA,AGAA,EDAA,AJAA,CIAA,AJAA,EUTJ,AXRa,ESaa,CEL1B,APSI,AJjBS,CIiBT,ADAA,AGAA,CHAA,AMJsC,AHItC,EDAA,AJAA,CIAA,AJAA,EUTJ,APSI,COTJ,ARSI,AGAA,EFAA,AJjBS,ASaqC,CJI9C,AFAA,AMJ+C,AHI/C,ALAA,GIAA,AJAA,MGAO,CDAA,AGAA,GKTX,ANSW,AIJ+B,ARI/B,CUTX,AFKiE,ILI7D,CDAA,AGAA,CFA6B,AKJS,CNIT,AMJzB,AHIyB,CDA7B,AJAA,EIA6B,AJAQ;AIArC,ADAA,AMPA,APOA,AMHI,AHGJ,AJGA,ADHA,ECGA,EONI,IJGJ,ADAA,ADAA,AGAA,ALAA,GSPA,ELOA,ADAA,ADAA,AGAA,AJGA,ADHA,CCGA,EGHA,ADAA,ADAA,AMHgB,AHGhB,ALAA,CQHiB,GJGjB,ADAA,ADAA,AGAA,ALAA,GSPA,ARUA,CAAA,EQVA,ADII,CCFH,ADE0B,GAAvB,APMJ,CON+B,EPM/B,IONI,MPMG,SAAP,EAA6B;ASTjC,AFKQ,AFbR,ACHa,ANoBT,ISTJ,AJRA,GIQA,AHXa,CCgBC,ADhBD,ANoBT,KAAA,CKjBJ,ACHa,ENoBT,CMpBS,CCgBW,EPIpB,COJuB,EDhBd,MCgBsB,CAAC,aAAT,CAAuB,QAAvB,CAAnB;AELR,ANOQ,ADAA,AMJG,APIH,AMDA,AHCA,ACfR,ANeQ,ESJG,EDGH,IJCI,ADAA,ADAA,AGAA,ALAA,MSJD,ADGO,CCHP,ADGQ,KJCP,ADAA,ADAA,AGAA,ALAA,CIAA,ADAA,ADAA,AGAA,ALAA,GQDJ,ECHG,CDGoB,ECH3B,ELII,ADAA,ADAA,AGAA,ALAA,CIAe,ADAA,ADAA,AGAA,ALAA,CQDf,MCHe,ELIf,ADAA,ADAA,AGAA,ALAA,EIA0B,ADAA,ADAA,AGAA,ALAA,USJ9B,EAAsC,ILIlC,ADAA,ADAA,AGAA,ALAA,EIA4C,ADAA,ADAA,AGAA,ALAA,KIAK,ADAA,ADAA,AGAA,ALAA,KIAjD,ADAA,ADAA,AGAA,ALAA;AUPR,ANQQ,ADAA,AMJA,APIA,AMAA,AHAA,AChBR,ALkBQ,ADFA,QIAM,ADAA,AMJA,APIA,AMAA,AHAA,AJEF,ADFE,IURd,AJRA,GFgBqB,ADAA,ADAA,AGAA,ALAA,ESJE,CLIC,ADAA,ADAA,AGAA,ALAA,ESJY,ARMxB,CAAA,CQNJ,ADIoB,GAAG,CJAC,ADAA,ADAA,AGAA,ALAA,CIAC,ADAA,ADAA,AGAA,ALAA,ICEzB,CAAe,COFgB,CAAC,MJAhB,ADAA,ADAA,AGAA,ALAA,CIAuB,ADAA,ADAA,AGAA,AJEvC,ADFuC,ECEb,IOFH,CJAP,ADAA,ADAA,AMA8B,AHA9B,CDAhB,ADAA,ADAA,AGAA,ELAgB,CAAhB,IQAuB,CAAvB,EPEA,EAA4C,KAAK,KAAjD;ASTJ,ANQI,ADAA,AMJA,APIA,AMAA,AHAA,ACfJ,ALiBI,ADFA,IIAA,ADAA,ADAA,AMAA,AHAA,ALAA,ISJM,ARMA,GSVV,ANQW,ADAA,ADAA,AGAA,ACfX,ANeW,CIAC,ADAA,ADAA,AGAA,ALAA,EURZ,CTUiB,ESVjB,AVQI,CSJgB,ADIF,APEE,COFD,CRAC,CSJG,AHXvB,GFeI,ADAA,ADAA,AGAA,ACfJ,CFeyB,ADAA,ADAA,AGAA,ALAA,CCEG,CQNC,ARMA,CQNC,ADI1B,ERAA,CIAA,ADAA,ADAA,AMA2B,AHA3B,EDA6B,ADAA,ADAA,AGAA,EIJV,CAAe,CDIlC,CJAkC,ADAA,ADAA,AGAA,EJElB,CAAuB,CGFvC,ADAA,ADAA,AGAA,OJEgB,CQNG,ARMnB,CQNA;ACHA,ANQA,ADAA,AMJA,APIA,AMCA,AHDA,ACfA,ALiBA,ADFA,IIAA,ADAA,ADAA,AGAA,AJEA,ADFA,IURM,ADIA,CDKD,AFhBA,IFeI,ADAA,ADAA,AGAA,AJEA,ADFA,CURG,ANQF,ADAA,ADAA,AGAA,AJEA,ADFA,GURe,EAAzB,CFSA,AFhBA,CEgBiB,CCLG,CHXD,EFenB,ADAA,AMJuB,APIvB,AGAA,AJEA,ADFA,CIAsB,ADAA,ADAA,AGAA,AJEA,ADFA,EQCtB,CAAyB,AFhBA,CAAC,GFe1B,ADAA,ADAA,AGAA,AJEA,ADFA,ESJiC,CAAC,CAAD,CAAV,CAAc,ADKZ,CCLF,CAAvB,CHXA,EEgByB,EAAK;AER9B,ANQA,ADAA,ADAA,AMAmC,AHAnC,ACfH,ALiBG,ADFA,IURA,APQA,ADAA,AGAA,EGAmC,GJA9B,AHEA,ADFA,CURC,CAAC,APQA,ADAA,AMAiC,AHAjC,CFAC,ADAA,AMAiC,AHAjC,EDAR,AJAA,CURA,CAAY,ATUZ,CGFa,ADAb,ADAA,AGAA,AJEa,ADFA,CQAsB,CAAa,CERhC,APQA,ADAA,AGAA,IDAhB,AHEA,ADFA,CGAqB,ADAA,AGAA,AJEC,KEFtB,ADAA,AGAA,CGAmC,CERnB,CAAA,ETUO,IAAD,EAAK,ESVf,CAAe,YAAf,EAA6B,kCAA7B,EAAiE,MAAjE,CAAZ;AACA,APQA,AMLA,APKA,AMD8D,AHC9D,AJEI,ADFJ,IURA,AVQA,CQDA,ILCK,AMLgB,APKhB,AGAA,CKRC,ATUI,CSVH,AVQA,CAAC,CSLa,CNKrB,ADAA,AGAA,CKRA,ADGqB,CCHT,CPQC,ADAA,AGAA,CILQ,CAAA,CCHL,CDGK,EROE,CEFvB,ADAA,AGAA,EJE0B,EDF1B,CAAyB,KCES,CSVlB,ATUmB,CSVnB,AVQhB,CSLqB,CTKa,ESLb,QROK,ADFS,CURvB,ATUqC,CSVnB,AVQI,EAAG,ESLrC,EAAqB,CROK,CQPL,AROjB,GQPiB,KCHT,EAAoC,SDG3B,CAAA,MAArB,EAAqB,EAAA,EAArB,EAAqC,KCHzB,EAAkE,MAAlE,CAAZ;AACA,ANOA,ADCA,AMNI,APOJ,AMFA,AHCA,ACbJ,ALeQ,ADFA,EMbR,EIKI,APQA,ADCA,AMFA,AHCA,EJEI,ADFA,EIDD,EMPG,ADEI,CCFH,APQA,ADCA,AGDA,ALAC,CGAA,ADCA,AGDA,ACbZ,ANaa,CIDD,AEZZ,EIKI,CAAY,AFOA,CCLK,ADKJ,ARCT,CIDD,CHGc,CSVD,ADEC,ARQC,ADFD,EMbrB,ANauB,CIDD,AEZtB,ANawB,ECEhB,EGHJ,CDCA,ADCA,AMFA,AHCA,AJE0B,CGHF,ADCC,ADCA,AMFA,AHCA,ALAR,CAAU,ECEvB,GSVY,AJLpB,ANaQ,CURY,ADEC,APOjB,AGDA,CFAA,AMNiB,CPOiB,AGDA,ACbtC,CHauC,AMNlB,ADKjB,CCLI,QPO+B,AGDA,ACb1B,CIKG,APQwB,CORN,ARSI,AGDA,CFAC,CDCE,AGDA,CFAC,SGb1C,EAAiC,EIKjB,EAAoC,sBAApC,EAA4D,MAA5D,CAAZ;AACA,ANM0B,ADEtB,ADCA,AMFJ,AHCI,ACbJ,ALeI,ADFH,IURD,AFOA,CRDA,CIA0B,ADEtB,ADCA,AGDA,AJEA,EKfE,EIKA,CAAC,APQC,ADCA,AGDA,CFAC,ADCA,AGDA,CDFwB,CAAC,AICxB,CEPV,AFOW,CEPC,CPQR,ADCA,AGDA,EJEa,CSVD,APQC,ADCA,AGDA,ACbC,ALeA,CGJQ,CDEP,ADCA,AGDA,CFAC,ADCA,AGDA,ACbC,CFWuB,IAAlB,AEXA,CHaT,ADCA,AGDA,AJEb,CEFuB,ADCA,AGDA,CGD3B,CAA4B,APGE,GSVd,APQZ,ADCA,AGDA,CKRY,ATUZ,GOHJ,AFZqB,CAAiB,CEYD,MFZhB,CAAyB,CIKlC,CAAkB,CFOQ,EAAD,EAAG,OFZmB,IIK/C,AJLmD,CAAC,CIKhB,EJLW,EAAtC,EAAqD,IAAI,CAAC,SAAL,CAAe,CIK7E,EAA2D,MAA3D,CAAZ,IJL0E,CAArD,CAArB;AIMA,ANKkD,ADGjD,AMPG,APQH,AMFG,AHCH,ACbD,ALeI,ADFJ,IURA,AVQA,CGFA,ADCA,AGDA,CGCI,APGA,EOHE,CAAC,CEPD,CAAC,AJLA,ANaA,CAAC,CCEG,CQTC,ARSA,CSVZ,CAAY,IAAI,CDCG,CAAC,CDMhB,AFZJ,ELeI,CQTA,ARSoB,EDFxB,CAAyB,EURT,CAAA,IVQhB,EAAkC,CCE9B,ESVQ,CAAc,MVQS,EAAD,EAAG,CURzB,EAA2B,MAA3B,EAAmC,EAAnC,CAAZ;AACA,APQH,AMPW,APQR,AMFI,AHCJ,ACbH,ALeI,ADFG,GGVR,AGNA,CIQI,ARSA,AGDA,CJHA,COEI,ARCA,EQDE,CAAC,CEPD,CAAC,ARSA,AGDA,ALAC,CECA,AGDA,ALAC,CSPI,ECDb,CAAY,CVQR,ESPI,CCDQ,AVQC,EAAE,CAAC,KECpB,AGDA,CHCyB,AGDA,ALAR,CAAU,EURX,CAAA,AFOZ,ERCA,CECJ,AGDA,EHCkC,AGDA,KKRtB,CAAe,IRSQ,AGDA,EHCD,AGDA,EHCG,AGDA,IKRzB,EAA6B,QAA7B,EAAuC,MAAvC,CAAZ;AACA,ANGkD,AKFtC,APQR,AGDA,AJEJ,ADFC,IURD,ATUA,CDJA,CEGI,AGDA,IKRE,CAAC,ARSC,AGDA,AJED,CCDE,AGDA,AJED,EQTU,CCDlB,CAAY,CRSR,AGDA,AJEJ,GSVgB,ARSC,AGDA,AJED,ECDG,AGDA,CIPQ,APQP,AGDA,EJEC,CQTS,GPQb,AGDA,CIPiB,APQP,AGDA,AJE3B,GSVgB,CAAA,CRSZ,AGDA,OIP8B,CAAA,ECDtB,CAAgB,ODCE,CAAe,KCDjC,EAA+B,ADCS,CAAC,IAAvB,EAA6B,OAAO,CAAC,KAArC,EAA4C,KCD9D,EAA4D,ADCS,CCDR,ADCS,KAApD,CAAlB,OCD4D,EAAgB,aAAhB,EAA+B,aAA/B,CAA5D,EAA2G,EAA3G,CAAZ;AACA,ANGA,ADKJ,AMPgB,APQX,AMHG,AHEH,ACbL,ALeI,ADFA,EGAJ,AGbA,EIKI,ANGA,AJKA,CEDA,AGDA,IJIK,CSVC,ADCM,ADKJ,CEND,ANGA,ADKX,AHAW,CILC,ADKZ,AGbA,ANaY,CMbZ,CLeI,CSVA,CAAY,ADCM,CAAC,ARSN,COJL,CAAA,CENQ,CPQpB,CAAA,AGbA,CGMgB,AHNhB,CGM8B,ARS1B,COJQ,CAAO,EJHf,AJKA,CILyB,AJKA,CGA7B,GAAA,AMPgB,CDKJ,ARER,CURgB,ADCqB,AHNzC,CIKoB,AVQgB,CILhC,CERJ,CFQuC,CIGN,ECLjB,CNOP,CKFD,EAA+B,AREF,EGArC,AGba,ANauB,CURpB,CAAkB,APQb,AHAkB,CILA,AERvC,EAAwB,YIKR,EAAmC,OAAnC,EAA2C,MAA3C,CAAZ;AACA,ANGI,ADKJ,AMPY,APQZ,AMHQ,AHER,ACbA,ALeA,ADFI,IGAJ,ADCA,AGDA,AJEA,EDFI,EURE,AFME,AFXF,CHaD,CCLE,ADKD,AMPM,CPQL,AGDA,AJEA,ADFC,CECA,AGDA,AJEA,ADFC,CQFG,CAAC,GJHC,AKFK,ATOf,CILW,AKFK,ETOH,CURE,ADCP,CAAY,AHNJ,ANaD,CAAC,CURE,APQtB,CCLO,AERgB,EEWf,CNGR,AMH2B,AHE3B,AJEA,CGP0B,AFMD,AGDA,AJEA,ADFR,CMbW,ANaD,CSPf,CCDkB,CAAC,ANG3B,AIGI,CNGR,AGDA,CDLgC,AIGC,ARE7B,CEC4B,AGDA,CJEhC,EAAmC,EKfZ,CAAiB,CEWP,CAAA,EENX,ARSW,AGDA,CKRY,CRSb,AGDA,CCbT,ALea,CCDD,AMHF,AHEE,ACba,CEWR,APIL,CSVb,CAAtB,AJLuB,ALee,CKftC,KEWiC,EAAzB;AELR,ANGQ,ADKR,AMPY,APQR,AMHC,AHED,ACbJ,ALeI,ADFH,IURD,APQA,CHFA,CEGI,AGDA,AJEA,CONA,CJDI,CDKH,CAAC,AMPM,CPQJ,AGDA,ACbD,ALeC,CSVA,ARSC,AGDA,AJEA,CSVA,ANGG,AIIH,CJJI,GMHb,ARSI,AGDA,AJEA,CSVU,CNGN,AKFa,CAAC,APQL,AGDA,AJEA,EGPI,AFMF,AGDA,AJEA,CCDC,AGDA,AJEA,CQTR,CAAe,AHN3B,CFQQ,GMHR,ARSiB,AGDA,AJEA,CSVS,ARSC,AGDA,AJEA,IEF3B,AMPY,CPQR,AGDA,AJEA,QSVJ;AACA,ANGK,ADKL,AMPY,APQX,AMFO,AHCP,ACbJ,ALeI,ADFJ,GMhBD,ANCA,EEcI,AGDA,AJEA,EGPI,CIMI,CEPH,APQA,ICLM,AIIC,CLCZ,AKDa,GLCA,CKDL,CAAU,GLCA,CAAC,CKDX,EEPR,GAAyB,APQZ,CAAa,KAA1B,OORA;AACA,ANGQ,ADKX,ADCA,AMFQ,AHCR,AJEA,GEND,ADZA,AGAA,AJGA,KSKU,ANGE,KAAI,CAAC,EMHC,GAAG,ANGT,GAAa,CMHA,INGb,EMHa,CAAA,IAAJ,CAAS,MAAT,CAAjB;AACA,ANGK,AKHG,ADOH,AFZT,ANaA,EMbA,ANaA,GQVI,IEEK,GJLT,CGKiB,AHLjB,ENaA,CAAA,CURI,GAAgB,EJLpB,CGKY,AHLZ,ENaA,CAAA,EURI,MVQJ,CMbA,ENaA,CMbA,SNaS,GMbT,ENaA,EAAqB;AUPpB,ANGI,ADKL,AMRgB,APShB,AMFI,AHCJ,ACbI,ALeJ,ADFI,EGAJ,ADCA,AGDA,AJEA,EOHI,ARCA,CIXA,GEFM,CNaD,CAAC,CGAV,CAAA,ADCA,AGDA,CHCA,AGDA,AJEA,CQVsB,ARUtB,EOHgB,CAAC,AFZE,GAAA,CHanB,CAAA,ADCA,AGDA,CIR+B,APS/B,AGDA,AJEA,CAAA,ADFI,ESR8B,EDO9B,AFZe,CEYU,AFZV,CHanB,AMRsC,CPStC,AGDA,ACbmB,CLenB,CEFA,AGbkC,CJclC,AGDA,CJEA,GKfuC,KEYnC,CNEK,AGDA,CFAT,AMRsC,ARU7B,CQV6B,GPStC,AGDA,ACbmB,CAAf,ALeJ,CCDqB,AGDA,CJEA,OQVa,CAAkB,OAAO,CAAC,IAA1B,EAAgC,OAAO,CAAC,KAAxC,EAA+C,OAAO,CAAC,KAAvD,CAAlB;ALIf,ADKG,AMRY,APSZ,AMFA,AHCA,AJEA,ADFA,GInBJ,CFoBI,AMFA,AHCA,AJEA,ADFA,KECK,AGDA,AJEA,ADFA,CSRO,APSN,AGDA,AJEA,ADFA,CGAC,KAAK,AMRM,CAAC,CDOL,CAAC,ELCf,EMRY,CAAc,APS1B,AGDA,AJEA,SQVY,CTQZ,CSRqC,ADOrC,CAAgC,MCPpB,CDOZ,EAAyC,KAAK,IAA9C;AEHJ,APKC,AMRe,APSZ,AMFA,AHCA,ACdA,ALgBA,ADFA,EULJ,CPGA,CDGI,AMFA,AHCA,AJEA,CSPJ,CAAA,EFIQ,AFbE,CJeD,AMFA,AHCA,AJEA,ADFA,CSRO,APSN,AGDA,AJEA,IDFN,CULJ,CAAA,CVKiB,ESRQ,CAAC,ADOtB,CAAiB,CFbG,ANcF,CAAC,CSRP,CAAe,AHNM,EAAjC,ENca,CULjB,AVK8B,GUL9B,AFII,CCPY,APSZ,AGDA,AJEA,CDFA,QULW,IAAf,EAAyB;AACrB,ANAJ,AKHgB,APSZ,AMFH,AHCG,AJEA,ADFH,EILD,CIrBA,ARsBA,CUDI,IAAI,CAAC,ARMA,AGDA,AJEA,KCDL,AGDA,AJEA,CSPA,ANAJ,CMAgB,ANAhB,CFMiB,AGDA,AJEA,ISPI,CRMC,AGDA,AJEA,CCDC,AGDA,AJEA,EGPvB,CAAA,GFMiB,AGDA,AJEA,CCDa,AGDA,AJEA,IGP9B,CFMI,AGDA,AJEA,EGPJ,CMAI,SNAK,KAAT,EAAqB;AMCjB,ANAA,ADIR,ADEK,AGDA,ACfG,ALiBH,GCLD,AGDA,AJEA,CSHI,ANAA,KAAK,ADIb,AGdY,CFUE,CMAC,CAAC,CJVA,EIUR,CAAY,AJVZ,EHcR,EGduB,IFUf,KEVA,EIUA,AJV0B;AIY7B,ANDG,AD/BR,AM2BgB,ADQZ,AFdQ,ANeR,CGpCJ,CKmCI,ARCA,CURA,AP5BJ,CC+BQ,EIIJ,CAAA,EJJS,CAAC,AEVE,CAAC,EGMI,ETSjB,CQDA,ARCA,CQDA,ECRY,CHNU,CAAC,IEcvB,ARCA,CAAA,EQDA,MJJI,AJKJ,CMfa,CAAyB,CNetC,EMfa,CEcb,AFdQ,EAAoC,ONe5C;AIJI,AKJY,APUhB,AMFI,AHCJ,ACfQ,ALiBR,ADFI,EECJ,AGDA,AJEA,IKjBQ,GFUC,EIIE,ARCA,CECX,AGDA,CHCA,AGDA,AJEA,CGPI,AKJkB,ARWtB,EOHgB,ARCA,CILC,GEVK,CFUlB,AEVmB,ANenB,CECJ,AGDA,CIT+B,APU/B,AGDA,AJEA,CAAA,CKjBQ,CGM0B,AHNN,CEcjB,CAAiB,CFdpB,CGM8B,CPUtC,AMFW,AHCX,CGDgC,APGhC,ECDA,AGDA,CJEA,MQXsC,CAAA,ADQN,INEhC,AGDA,CGDgC,APGhC,EOHqC,ECRH,CAAc,OAAO,CAAC,IAAtB,EAA4B,OAAO,CAAC,KAApC,EAA2C,OAAO,CAAC,KAAnD,CAAlB;ACMhB,ANDC,ADjCQ,AM6BO,APUZ,AMFI,AHCJ,ACfC,ALiBD,ADFH,EUJD,CNLA,AJOA,EUFA,CAAA,CPlCS,CAAA,EM6BO,CPUL,AGDA,AJEA,EOHI,EEHf,CAAA,ADLsB,APUN,AGDA,AJEA,CExCP,AM6Bc,GN7Bd,CDuCL,AGDA,AJEA,EQXY,CAAc,KN7BrB,IM6BO,EAAyB,CCKzC,GAAA,GDLgB,OCKK,cAArB,EAAwC;AACpC,ADLY,APUf,AMHe,AHEf,AJEA,GCHD,AGDA,AJEA,KSJU,AFEM,ECPA,EDOI,EAAE,KEFD,ADLI,ADOE,CCPD,ADOE,EEFJ,EDLR,ADOD,CCPgB,CCKH,MAAA,CAAA,CDLZ,GCKQ,CAAS,cAAA,CAAA,YAAA,CAAa,WAAb,CAAyB,cAAzB,CAAT,CAApB;AACA,ANDJ,AKJgB,ADMkB,AFb9B,ANeR,EIJI,EMCI,IFC8B,CREtC,EUHe,AJZA,CIYC,CFC2B,EEDnC,ANDJ,AIEyC,CEDzB,ANDhB,IIE8C,CAAC,CREnD,EUHQ,CNDJ,AEXI,CFWJ,AIEe,QJFf,GAAA,YAAA;AMGI,ANFA,AFKR,AMJ0D,AHG1D,ACfK,ALkBL,AD3CA,CAAA,EMiBI,ANjBJ,CUsCQ,IFDkD,CNI1D,AGDA,AJGA,EGPe,CIC+C,EAAE,CEC7C,CAAC,ANFA,GFKpB,AMJqE,AHGrE,CGHsE,APMtE,CGPQ,CMEA,CAAmB,CFDR,IECa,iBAAxB;AACH,ANFA,AKLW,APhChB,AMqC4E,AHrC5E,AJAA,CCAA,AGAA,AJAA,ESkCI,ANCA,AFnCJ,AGAA,AJAA,KOqC4E,KCLvD,ADK4D,EAAE,KCLnE,ADKwE,CAAC;ACJrE,ADID,AFVf,AN3BS,EM2BT,KEUQ,ARrCC,CAAA,IM2BT,CAAA,CGMsB,OTjCb,CM2BT,CGM+B,AHN/B,CN3BS,ESiCyB,IAAI,OHNtC,AN3BS,GM2BT,EGMsC,CAAA,OHNvB,GGMmB,AHNlC,CGMiD,CHNvB,MGM8B,CAAC,IAAvB,EAA6B,OAAO,CAAC,KAArC,EAA4C,OAAO,CAAC,KAApD,CAAlB;ACQpB,ANHA,AKJoB,APlCP,AMsCJ,AHtCI,AC4BL,AL5BK,KOoCE,CAAP,CNpCK,AGAA,AJAA,CCAA,AGAA,AJAA,CSyCb,ANHA,AEVa,CGMO,ECOpB,IDP0B,CAAC,CPlCd,AGAA,CJAA,CK4BL,CJ5BK,AGAA,AC4BY,CFUzB,AHtCa,CQkCO,CAAc,OPlCrB,AGAA,AC4BL,CAA4B,CGMhB,ARlCP,EQkCgC,AHNrC,OGMY;AC3BpB,ANPA,AKmCoB,ADIf,AFVA,CItBL,ANPA,EMOA,ANPA,AImCI,AFRA,OGQgB,SAAS,CAAC,IAAV,CAAe,SAAf;AACA;AC7BP,ANPA,AI0CT,AFXA,EEWA,AFXA,IEWA,CEnCS,ANPA,AI0CT,CEnCS,ANPA,GMOA,CJwBT,CAAA,CIxBS,EFmCT,CEnCS,AFmCT,IJ1CS,AI0CT,CFXA,CAAA,CF/BS,AI0CT,UAAK,GJ1CI,CI0CT,EAAe,CFXf,GAAA,UAAmB,cAAnB,EAAyC,GAAzC,EAAoD;AGMxC,ADMR,AFXA,QEWM,AFXA,KGKO,EDMA,GAAG,ECNR,CHLW,CEWC,EFXE,KAAK,KEWP,CAAA,KFXE,CAAiB,IEWvB,EAAhB,CFXsB,CAAyB,GAAzB,EAA8B,IAAI,CAAC,SAAL,CAAe,cAAf,CAA9B,CAAtB;AGMY,ADMZ,AFXA,IEWA,OAAO,AFXA,CEWC,ECNU,SAAS,CDM3B,AFXA,CEWqB,CCNS,GDM9B,CCNkC,aAAA,CAAA,WAAJ,CAAgB,OAAO,CAAC,IAAxB,EAA8B,OAAO,CAAC,KAAtC,EAA6C,EAA7C,EAAiD,OAAO,CAAC,KAAzD,CAAlB;AACA,ADMZ,AFXH,GAHD,CEcI,KAAK,CCNO,ADMN,MCNY,CAAC,MAAP,CAAc,SAAd,EAAyB,KDMhC,CAAL,CCNY;AACA,ADMZ,IAAA,MCNY,ADMN,CAAC,QCNc,ADMrB,CCNsB,ADMN,ICNJ,ADMZ,CCN2B,EDMJ,OCNX,KDMZ;ACLY,ADMf,AFZL,GEOI,MFPJ,UAAA;AApCA,CAAA,EAAA;AG2CgB,ADOZ,EAAA,IAAA,CAAA,MCPiB,GDOjB,CAAA,MCPY,ODOZ,GAAA,UAAc,IAAd,EAA0B,GAA1B,EAAqC;ACNrB,ADOZ,AFnDK,OAAA,CEmDC,AFnDD,MG4Ca,CDOL,GAAG,AFnDX,GAAA,CEmDe,CCPO,GAAG,IAAI,CH5C7B,GEmDe,CAAA,UCPc,ADOlB,CCPkB,CDOlC,YCP8B,CAAkB,OAAO,CAAC,IAA1B,EAAgC,OAAO,CAAC,KAAxC,EAA+C,OAAO,CAAC,KAAvD,CAAlB;AACA,ADOZ,IAAA,MCPY,CDOL,CAAC,ICPU,CAAC,MAAP,CAAc,MDO1B,CAA2B,ECPf,EAAyB,ADOrC,EAAiC,GAAjC,ECPY;AACA,ADOZ,IAAA,KAAK,CCPO,ADON,SCPe,CAAC,IAAV,CAAe,EDOtB,CAAL,MCPY;AACA,ADOZ,IAAA,MAAM,CAAC,QAAP,CAAgB,IAAhB,GAAuB,YAAvB;AACH,GALD;ACDY;AACI,ADOhB,EAAA,IAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;ACzCQ,AD0CJ,IAAA,MAAM,CAAC,QAAP,CAAgB,IAAhB,GAAuB,YAAvB;ACNC,ADOJ,GAFD;;ACJI,ADQR,SAAA,ECRe,EDQf,OCRQ;AACH,ADpDL,CAAA,ECSW,ADTX;;ACqDA,ADrDa,OAAA,CAAA,CCqDb,GDrDa,GAAA,IAAA,ECqDb;AAlDA,CAAA,EAAA;;AAAa,OAAA,CAAA,YAAA,GAAA,YAAA","file":"Source.77de5100.js","sourceRoot":"..","sourcesContent":["export enum FieldType {\r\n    Textbox = \"text\",\r\n    Textlargebox = \"textarea\",\r\n    Date = \"date\",\r\n    Email = \"email\",\r\n    Selectbox = \"radio\",\r\n    Checkbox = \"checkbox\"\r\n}","export class FieldLabel {\r\n    constructor (container: HTMLElement, tagStyle: string, content: string){\r\n        const element = document.createElement(\"LABEL\");\r\n        element.className = tagStyle;\r\n        element.innerHTML = content;\r\n        container.appendChild(element);\r\n    };\r\n    \r\n}","import { IField } from './../Interfaces/IField';\r\nimport { FieldType } from './../Enums/FieldType';\r\nimport { FieldLabel } from './FieldLabel';\r\n\r\nexport class TextAreaField implements IField {\r\n    constructor(name: string, label: string, value: string) {\r\n        this.Name = name;\r\n        this.Label = label;\r\n        this.Value = value;\r\n    }\r\n\r\n    Name: string;\r\n    Label: string;\r\n    Type: FieldType = FieldType.Textlargebox;\r\n    Value: string;\r\n    Input: HTMLTextAreaElement;\r\n\r\n    render(container: HTMLTextAreaElement): void {\r\n        new FieldLabel(container, 'question-label', this.Label);\r\n        const element = document.createElement('textarea');\r\n        element.value = this.Value;\r\n        container.appendChild(element);\r\n        this.Input = element;\r\n        element.addEventListener('keyup', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n        element.addEventListener('paste', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n        element.addEventListener('cut', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n    }\r\n\r\n    setValue(event: Event): any {\r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n        this.Value = event.target.value;\r\n    }\r\n\r\n    getValue(): string {\r\n        return this.Value;\r\n    }\r\n}","import { IField } from './../Interfaces/IField';\r\nimport { FieldType } from './../Enums/FieldType';\r\nimport { FieldLabel } from './FieldLabel';\r\n\r\nexport class SelectField  implements IField {\r\n\r\n    constructor(name: string, label: string, options: string[], value: string | null) {\r\n        this.Name = name;\r\n        this.Label = label;\r\n        this.Options = options;\r\n        this.Value = value;\r\n    }\r\n    \r\n    Name: string;    \r\n    Label: string;\r\n    Options: string[];\r\n    Type: FieldType = FieldType.Selectbox;\r\n    Value: string;\r\n    Input: HTMLSelectElement;\r\n    \r\n    render(container: HTMLElement): void {\r\n        new FieldLabel(container, 'question-label', this.Label);\r\n        const element = document.createElement('select');\r\n        container.appendChild(element);\r\n        this.Options.forEach( (text) => {\r\n            const optionElement = document.createElement('option');\r\n            optionElement.value = text;\r\n            optionElement.innerHTML = text;\r\n            element.appendChild(optionElement);\r\n        })\r\n        element.value = this.Value;\r\n        this.Input = element;\r\n        element.addEventListener('change', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n    }\r\n\r\n    setValue(event: Event): any {\r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n        this.Value = event.target.value;\r\n    }\r\n\r\n    getValue(): string {\r\n        return this.Value;\r\n    }\r\n    \r\n}","import { IField } from './../Interfaces/IField';\r\nimport { FieldType } from './../Enums/FieldType';\r\nimport { FieldLabel } from './FieldLabel';\r\n\r\nexport class EmailField  implements IField {\r\n    constructor(name: string, label: string, value: string | '') {\r\n        this.Name = name;\r\n        this.Label = label;\r\n        this.Value = value;\r\n    }\r\n\r\n    Name: string;    \r\n    Label: string;\r\n    Type: FieldType = FieldType.Email;\r\n    Value: string;\r\n    Input: HTMLInputElement;\r\n    \r\n    render(container: HTMLElement): void {\r\n        new FieldLabel(container, 'question-label', this.Label);\r\n        const element = document.createElement('input');\r\n        element.setAttribute('type', this.Type);\r\n        container.appendChild(element);\r\n        element.value = this.Value;\r\n        this.Input = element;\r\n\r\n        element.addEventListener('keyup', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n        element.addEventListener('paste', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n        element.addEventListener('cut', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n    }\r\n\r\n    setValue(event: Event): any {\r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n        this.Value = event.target.value;\r\n    }\r\n\r\n    getValue(): string {\r\n        return this.Value;\r\n    }\r\n}","import { IField } from './../Interfaces/IField';\r\nimport { FieldType } from './../Enums/FieldType';\r\nimport { FieldLabel } from './FieldLabel';\r\n\r\nexport class DateField  implements IField {\r\n    constructor(name: string, label: string, value: string | null) {\r\n        this.Name = name;\r\n        this.Label = label;\r\n        this.Value = value;\r\n    }\r\n\r\n    Name: string;    \r\n    Label: string;\r\n    Type: FieldType = FieldType.Date;\r\n    Value: string;\r\n    Input: HTMLInputElement;\r\n    \r\n    render(container: HTMLElement): void {\r\n        new FieldLabel(container, 'question-label', this.Label);\r\n        const element = document.createElement('input');\r\n        element.setAttribute('type', this.Type);\r\n        container.appendChild(element);\r\n        element.value = this.Value;\r\n        this.Input = element;\r\n        element.addEventListener('change', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n    }\r\n\r\n    setValue(event: Event): any {\r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n        this.Value = event.target.value;\r\n    }\r\n\r\n    getValue(): string {\r\n        return this.Value;\r\n    }\r\n}","import { IField } from './../Interfaces/IField';\r\nimport { FieldType } from './../Enums/FieldType';\r\nimport { FieldLabel } from './FieldLabel';\r\n\r\nexport class CheckboxField implements IField {\r\n    constructor(name: string, label: string, value: boolean) {\r\n        this.Name = name;\r\n        this.Label = label;\r\n        this.Value = value;\r\n    }\r\n\r\n    Name: string;    \r\n    Label: string;\r\n    Type: FieldType = FieldType.Checkbox;\r\n    Value: boolean;\r\n    Input: HTMLInputElement;\r\n\r\n    render(container: HTMLElement): void {\r\n        new FieldLabel(container, 'question-label', this.Label);\r\n        const element = document.createElement('input');\r\n        element.setAttribute('type', this.Type);\r\n        container.appendChild(element);\r\n        this.Input = element;\r\n        if(this.Value === true) { element.checked = true };\r\n        element.addEventListener('change', () => {\r\n            if(element.checked == true) {\r\n                this.Value = true;\r\n            } else {\r\n                this.Value = false;\r\n            }\r\n        });\r\n    }\r\n    \r\n    setValue(event: Event): any {\r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n        this.Value = true;\r\n    }\r\n\r\n    getValue(): boolean{\r\n        return this.Value;\r\n    }\r\n}","import { FieldLabel } from \"./FieldLabel\";\r\nimport { IField } from './../Interfaces/IField';\r\nimport { FieldType } from './../Enums/FieldType';\r\n\r\nexport class InputField implements IField {\r\n    constructor(name: string, label: string, value: string){\r\n        this.Name = name;\r\n        this.Label = label;\r\n        this.Value = value;\r\n    }\r\n\r\n    Name: string;\r\n    Label: string;\r\n    Type: FieldType = FieldType.Textbox;\r\n    Value: string;\r\n    Input: HTMLInputElement;\r\n\r\n    render(container: HTMLElement): void{\r\n        new FieldLabel(container, 'question-label', this.Label);\r\n        const element = document.createElement('input');\r\n        element.setAttribute('type', this.Type);\r\n        container.appendChild(element);\r\n        element.value = this.Value;\r\n        this.Input = element;\r\n        element.addEventListener('keyup', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n        element.addEventListener('paste', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n        element.addEventListener('cut', (ev) => {\r\n            this.Value = ev.target.value;\r\n        });\r\n    }\r\n\r\n    setValue(event: Event): any {\r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n        this.Value = event.target.value;\r\n    }\r\n\r\n    getValue(): string {\r\n        return this.Value;\r\n    }\r\n}","import { IDataStorage } from \"../Interfaces/IDataStorage\";\r\nimport { Form } from \"./Form\";\r\n\r\nexport class LocStorage implements IDataStorage {\r\n\r\n    constructor() {\r\n        this.DataStorage = window.localStorage;\r\n    }\r\n\r\n    DataStorage: any;\r\n\r\n    saveDocument(documentObject: Form): string {\r\n        const saveDocument = this.DataStorage.setItem(`document-${(Date.now())}`, JSON.stringify(documentObject));\r\n        return saveDocument;\r\n    }\r\n\r\n    loadDocument(key: string): object {\r\n        const loadedDocument = this.DataStorage.getItem(key);\r\n        return loadedDocument;\r\n    }\r\n\r\n    getDocuments(): string[] {\r\n        const documents: object = {...this.DataStorage};\r\n        const documentsArray: string[] = [];\r\n        for(let key in documents) {\r\n            if (!documents.hasOwnProperty(key)) continue;\r\n            documentsArray.push(key);\r\n        }\r\n        return documentsArray;\r\n    }\r\n\r\n    removeDocument(key: string): void {\r\n        this.DataStorage.removeItem(key);\r\n    }\r\n\r\n    saveEditedDocument(documentObject: Form, key: string): string {\r\n        const savedDocument = this.DataStorage.setItem(key, JSON.stringify(documentObject));\r\n        return savedDocument;\r\n    }\r\n}","export class Router {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    static getParam(): string {\r\n        const query: string = window.location.search.substr(1);\r\n        const urlParams = new URLSearchParams(query);\r\n        console.log(\"jestem w getParam\");\r\n        const id = urlParams.get('id');\r\n        return id;\r\n    }\r\n}","import { IField } from './../Interfaces/IField';\r\nimport { LocStorage } from './LocStorage';\r\nimport { Router } from './Router';\r\n\r\n\r\nexport class Form {\r\n    constructor(fields: IField[]) {\r\n        this.fieldsArray = fields;\r\n    }\r\n\r\n    private fieldsArray: IField[];\r\n\r\n    render(pole: HTMLElement): void {\r\n        const formDocument: HTMLElement = document.createElement(\"form\");\r\n        formDocument.classList.add(\"form\");\r\n\r\n        const saveButton = document.createElement('button');\r\n        saveButton.innerHTML = \"Save\";\r\n\r\n        const backwardButton = document.createElement('button');\r\n        backwardButton.innerHTML = \"Back\";\r\n\r\n        this.fieldsArray.forEach(field => {field.render(formDocument)});\r\n        formDocument.appendChild(saveButton);\r\n        saveButton.addEventListener('click', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopImmediatePropagation();\r\n            if (Router.getParam() != null) {\r\n                this.saveEditedDoc(this, Router.getParam());\r\n            }\r\n            else {\r\n                this.save(this);\r\n            }\r\n            });\r\n        formDocument.appendChild(backwardButton);\r\n        backwardButton.addEventListener('click', this.back);\r\n        pole.appendChild(formDocument);\r\n    }\r\n\r\n    getValue(): object {\r\n        return this.fieldsArray.map(field => {\r\n            return {type: field.Type, label: field.Label, name: field.Name, value: field.Value};\r\n        })\r\n    }\r\n\r\n\r\n    save(data: Form): void {\r\n        const storage = new LocStorage();\r\n        storage.saveDocument(data);\r\n        alert(\"Document successfully saved!\");\r\n        window.location.href = \"index.html\";\r\n    }\r\n\r\n    saveEditedDoc(data: Form, key: string): void {\r\n        const storage = new LocStorage();\r\n        storage.saveEditedDocument(data, key);\r\n        alert(\"Document saved!\");\r\n        window.location.href = \"index.html\";\r\n    }\r\n\r\n    back(): void {\r\n        window.location.href = \"index.html\";\r\n    }\r\n\r\n}","import { IField } from '../Interfaces/IField';\r\nimport { CheckboxField } from './CheckboxField';\r\nimport { DateField } from './DateField';\r\nimport { EmailField } from './EmailField';\r\nimport { SelectField } from './SelectField';\r\nimport { TextAreaField } from './TextAreaField';\r\nimport { InputField } from './InputField';\r\n\r\nexport class Deserializer {\r\n    \r\n    constructor() {\r\n        \r\n    }\r\n\r\n    static Deserialize(documentObject: any): IField[] {\r\n        const newFields: IField[] = [];\r\n        const objEntries = Object.entries(documentObject);\r\n        const arrayOfObjects = objEntries[0][1];\r\n        for(const element of arrayOfObjects) {\r\n            switch (element.Type) {\r\n                case 'text':\r\n                    const instance1 = new InputField(element.Name, element.Label, element.Value);\r\n                    Object.assign(instance1, element);\r\n                    console.log(instance1);\r\n                    newFields.push(instance1);\r\n                    break;\r\n                case 'checkbox':\r\n                    const instance2 = new CheckboxField(element.Name, element.Label, element.Value);\r\n                    Object.assign(instance2, element);\r\n                    newFields.push(instance2);\r\n                    break;\r\n                case 'date':\r\n                    const instance3 = new DateField(element.Name, element.Label, element.Value);\r\n                    Object.assign(instance3, element);\r\n                    newFields.push(instance3);\r\n                    break;\r\n                case 'email':\r\n                    const instance4 = new EmailField(element.Name, element.Label, element.Value);\r\n                    Object.assign(instance4, element);\r\n                    newFields.push(instance4);\r\n                    break;\r\n                case 'radio':\r\n                    const instance5 = new SelectField(element.Name, element.Label, [], element.Value);\r\n                    Object.assign(instance5, element);\r\n                    newFields.push(instance5);\r\n                    break;\r\n                case 'textarea':\r\n                    const instance6 = new TextAreaField(element.Name, element.Label, element.Value);\r\n                    Object.assign(instance6, element);\r\n                    newFields.push(instance6);\r\n                    break;\r\n            \r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        return newFields;\r\n    }\r\n}\r\n  \r\n","import { TextAreaField } from './TextAreaField';\r\nimport { SelectField } from './SelectField';\r\nimport { EmailField } from './EmailField';\r\nimport { DateField } from './DateField';\r\nimport { CheckboxField } from './CheckboxField';\r\nimport { InputField } from './InputField';\r\nimport { Form } from './Form';\r\nimport { IField } from './../interfaces/ifield';\r\nimport { Deserializer } from './Deserializer';\r\n\r\n\r\nexport class App {\r\n    constructor() {\r\n        const fields: IField[] = [];\r\n        fields.push(new InputField('input-test', 'Czy podoba Ci się nauka na WSEI?', 'test'));\r\n        fields.push(new CheckboxField('checkbox-test1', 'Czy preferujesz e-learning?','test'));\r\n        fields.push(new CheckboxField('checkbox-test2', 'Studiujesz dziennie?', 'test'));\r\n        fields.push(new CheckboxField('checkbox-test3', 'Studiujesz zaocznie?','test'));\r\n        fields.push(new DateField('date-test', 'Data', ''));\r\n        fields.push(new EmailField('email-test', 'E-mail', 'test'));\r\n        fields.push(new SelectField('select-test', 'Wybrany kierunek studiów:', ['Informatyka', 'Ekonometria', 'Psychologia'] ,''));\r\n        fields.push(new TextAreaField('textarea-test', 'Uwagi','test'));\r\n        const formContainer = document.createElement('div');\r\n        document.body.appendChild(formContainer);\r\n        this.DocumentContainer = formContainer;\r\n        const testForm = new Form(fields);\r\n        this.TestForm = testForm;\r\n    }\r\n\r\n    DocumentContainer: HTMLElement;\r\n    TestForm: Form;\r\n\r\n    renderDocument(form: Form) {\r\n        form.render(this.DocumentContainer);\r\n        console.log(\"rederDocument\");\r\n        \r\n    }\r\n\r\n    renderDocumentToEdit(documentObject: any): void {\r\n        const newFormEdit = new Form(Deserializer.Deserialize(documentObject));\r\n        console.log(\"asdasd\");\r\n        \r\n        newFormEdit.render(this.DocumentContainer);\r\n    }\r\n\r\n}","import { App } from \"./Classes/App\";\r\n\r\nexport const app = new App();\r\nconsole.log(\"Jestem w index.ts\");\r\napp.renderDocument(app.TestForm);"]}